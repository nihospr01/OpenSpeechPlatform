-- VHDL testbench template generated by SCUBA Diamond (64-bit) 3.10.0.111.2
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;

use IEEE.math_real.all;

use IEEE.numeric_std.all;

entity tb is
end entity tb;


architecture test of tb is 

    component ramdqtest
        port (Clock: in std_logic; ClockEn: in std_logic; 
        Reset: in std_logic; WE: in std_logic; 
        Address : in std_logic_vector(11 downto 0); 
        Data : in std_logic_vector(11 downto 0); 
        Q : out std_logic_vector(11 downto 0)
    );
    end component;

    signal Clock: std_logic := '0';
    signal ClockEn: std_logic := '0';
    signal Reset: std_logic := '0';
    signal WE: std_logic := '0';
    signal Address : std_logic_vector(11 downto 0) := (others => '0');
    signal Data : std_logic_vector(11 downto 0) := (others => '0');
    signal Q : std_logic_vector(11 downto 0);
begin
    u1 : ramdqtest
        port map (Clock => Clock, ClockEn => ClockEn, Reset => Reset, WE => WE, 
            Address => Address, Data => Data, Q => Q
        );

    Clock <= not Clock after 5.00 ns;

    process

    begin
      ClockEn <= '0' ;
      wait for 100 ns;
      wait until Reset = '0';
      ClockEn <= '1' ;
      wait;
    end process;

    process

    begin
      Reset <= '1' ;
      wait for 100 ns;
      Reset <= '0' ;
      wait;
    end process;

    process

    begin
      WE <= '0' ;
      wait until Reset = '0';
      for i in 0 to 4099 loop
        wait until Clock'event and Clock = '1';
        WE <= '1' after 1 ns;
      end loop;
      WE <= '0' ;
      wait;
    end process;

    process

    begin
      Address <= (others => '0') ;
      wait for 100 ns;
      wait until Reset = '0';
      for i in 0 to 8198 loop
        wait until Clock'event and Clock = '1';
        Address <= Address + '1' after 1 ns;
      end loop;
      wait;
    end process;

    process

    begin
      Data <= (others => '0') ;
      wait for 100 ns;
      wait until Reset = '0';
      for i in 0 to 4099 loop
        wait until Clock'event and Clock = '1';
        Data <= Data + '1' after 1 ns;
      end loop;
      wait;
    end process;

end architecture test;
